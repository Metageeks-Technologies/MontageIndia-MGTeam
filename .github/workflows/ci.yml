name: CI Pipeline

on:
  push:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version
        
    - name: Login Dockerhub
      env:
        DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

    - name: Create .env file
      run: |
        cd server
        touch .env
        echo PORT=${{ secrets.PORT }} >> .env
        echo MONGO_URL=${{ secrets.MONGO_URL }} >> .env
        echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
        echo JWT_LIFETIME=${{ secrets.JWT_LIFETIME }} >> .env
        echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
        echo WATERMARK_IMG_NAME=${{ secrets.WATERMARK_IMG_NAME }} >> .env
        echo AWS_REGION=${{ secrets.AWS_REGION }} >> .env
        echo AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} >> .env
        echo AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} >> .env
        echo AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} >> .env
        echo AWS_MEDIA_CONVERT_ROLE=${{ secrets.AWS_MEDIA_CONVERT_ROLE }} >> .env
        echo AWS_MEDIA_CONVERT_QUEUE=${{ secrets.AWS_MEDIA_CONVERT_QUEUE }} >> .env
        echo AWS_SQS_QUEUE_URL=${{ secrets.AWS_SQS_QUEUE_URL }} >> .env
        echo AWS_TEMP_BUCKET_NAME=${{ secrets.AWS_TEMP_BUCKET_NAME }} >> .env
        echo CLIENT_URL=${{ secrets.CLIENT_URL }} >> .env
        echo EMAIL_USER=${{ secrets.EMAIL_USER }} >> .env
        echo EMAIL_PASS=${{ secrets.EMAIL_PASS }} >> .env
        echo JWT_SECRET_CUSTOMER=${{ secrets.JWT_SECRET_CUSTOMER }} >> .env
        echo NEXT_PUBLIC_RAZORPAY_KEY=${{ secrets.NEXT_PUBLIC_RAZORPAY_KEY }} >> .env
        echo RAZORPAY_SECRET=${{ secrets.RAZORPAY_SECRET }} >> .env
        cat .env 
      
    - name: Build the Docker image
      run: |
        cd server
        docker-compose -f docker-compose.yml -f docker-compose.prod.yml build mi-server

    - name: Push to DockerHub
      run: |
        cd server
        docker-compose -f docker-compose.yml -f docker-compose.prod.yml push mi-server